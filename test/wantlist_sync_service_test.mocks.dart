// Mocks generated by Mockito 5.4.6 from annotations
// in music_up/test/wantlist_sync_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:music_up/models/album_model.dart' as _i5;
import 'package:music_up/services/config_manager.dart' as _i2;
import 'package:music_up/services/discogs_service_unified.dart' as _i6;
import 'package:music_up/services/json_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConfigManager_0 extends _i1.SmartFake implements _i2.ConfigManager {
  _FakeConfigManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [JsonService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonService extends _i1.Mock implements _i3.JsonService {
  @override
  _i2.ConfigManager get configManager => (super.noSuchMethod(
        Invocation.getter(#configManager),
        returnValue: _FakeConfigManager_0(
          this,
          Invocation.getter(#configManager),
        ),
        returnValueForMissingStub: _FakeConfigManager_0(
          this,
          Invocation.getter(#configManager),
        ),
      ) as _i2.ConfigManager);

  @override
  _i4.Future<List<_i5.Album>> loadAlbums() => (super.noSuchMethod(
        Invocation.method(
          #loadAlbums,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
      ) as _i4.Future<List<_i5.Album>>);

  @override
  _i4.Future<_i5.Album?> loadAlbumWithTracks(String? albumId) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAlbumWithTracks,
          [albumId],
        ),
        returnValue: _i4.Future<_i5.Album?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.Album?>.value(),
      ) as _i4.Future<_i5.Album?>);

  @override
  _i4.Future<void> saveAlbums(List<_i5.Album>? albums) => (super.noSuchMethod(
        Invocation.method(
          #saveAlbums,
          [albums],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.Album>> loadWantlist() => (super.noSuchMethod(
        Invocation.method(
          #loadWantlist,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
      ) as _i4.Future<List<_i5.Album>>);

  @override
  _i4.Future<void> saveWantlist(List<_i5.Album>? wantlist) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWantlist,
          [wantlist],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.Album>> importAlbumsFromFile(String? importFilePath) =>
      (super.noSuchMethod(
        Invocation.method(
          #importAlbumsFromFile,
          [importFilePath],
        ),
        returnValue: _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
      ) as _i4.Future<List<_i5.Album>>);
}

/// A class which mocks [DiscogsServiceUnified].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscogsServiceUnified extends _i1.Mock
    implements _i6.DiscogsServiceUnified {
  @override
  bool get hasAuth => (super.noSuchMethod(
        Invocation.getter(#hasAuth),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasWriteAccess => (super.noSuchMethod(
        Invocation.getter(#hasWriteAccess),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get statusMessage => (super.noSuchMethod(
        Invocation.getter(#statusMessage),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#statusMessage),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#statusMessage),
        ),
      ) as String);

  @override
  _i4.Future<bool> testAuthentication() => (super.noSuchMethod(
        Invocation.method(
          #testAuthentication,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<_i5.Album>> getWantlist() => (super.noSuchMethod(
        Invocation.method(
          #getWantlist,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Album>>.value(<_i5.Album>[]),
      ) as _i4.Future<List<_i5.Album>>);

  @override
  _i4.Future<void> addToWantlist(String? releaseId) => (super.noSuchMethod(
        Invocation.method(
          #addToWantlist,
          [releaseId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeFromWantlist(String? releaseId) => (super.noSuchMethod(
        Invocation.method(
          #removeFromWantlist,
          [releaseId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, dynamic>>> searchReleases(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchReleases,
          [query],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<_i5.Track>> getReleaseTracklist(String? releaseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReleaseTracklist,
          [releaseId],
        ),
        returnValue: _i4.Future<List<_i5.Track>>.value(<_i5.Track>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Track>>.value(<_i5.Track>[]),
      ) as _i4.Future<List<_i5.Track>>);
}
